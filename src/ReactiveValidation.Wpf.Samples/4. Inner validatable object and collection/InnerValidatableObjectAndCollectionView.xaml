<UserControl x:Class="ReactiveValidation.Wpf.Samples._4._Inner_validatable_object_and_collection.InnerValidatableObjectAndCollectionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:ReactiveValidation.Wpf.Samples._4._Inner_validatable_object_and_collection"
             xmlns:s="clr-namespace:ReactiveValidation.Wpf.Samples"
             mc:Ignorable="d" d:DataContext="{d:DesignInstance local:InnerValidatableObjectAndCollectionViewModel}"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <!-- It is more convenient to create a base style for control. -->
        <Style x:Key="TextBox" TargetType="TextBox">
            <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ExtendedErrorTemplate}" />

            <Setter Property="Margin" Value="3" />
        </Style>

        <Style x:Key="ItemsControl" TargetType="ItemsControl">
            <!-- ItemsControl with with errors template is look ugly.
                 If you don't want to create style, you also can use ValidatesOnNotifyDataErrors=False inside ItemsSource's Binding. -->
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />

            <Setter Property="Margin" Value="3" />
        </Style>
        
        <Style x:Key="Button" TargetType="Button">
            <!-- Button with with errors template is look ugly.
                 If you don't want to create style, you also can use ValidatesOnNotifyDataErrors=False inside CommandParameter's Binding. -->
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />

            <Setter Property="Margin" Value="3" />
        </Style>
    </UserControl.Resources>

    <AdornerDecorator>
        <Grid x:Name="Root">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Row="0" Grid.Column="0" Margin="3" Text="Inner object value: " />
                <TextBox Grid.Row="0" Grid.Column="1" Style="{StaticResource TextBox}"
                         Text="{Binding InnerObjectValue.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <TextBlock Grid.Row="0" Grid.Column="2" Margin="3" MaxWidth="200" TextWrapping="Wrap"
                           Text="In inner object value should be not empty" />

                <TextBlock Grid.Row="1" Grid.Column="0" Margin="3" Text="Collection:" />
                <TextBlock Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Margin="3" TextWrapping="Wrap"
                           Text="Collection should contains from 3 to 5 elements and they should be valid" />

                <ScrollViewer Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3">
                    <ItemsControl Style="{StaticResource ItemsControl}" ItemsSource="{Binding InnerObjectsCollection}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <TextBox Grid.Column="0" Style="{StaticResource TextBox}"
                                             Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                    <Button Grid.Column="1" Style="{StaticResource Button}" Padding="6,3,6,3" Content="Delete"
                                            Command="{Binding ElementName=Root, Path=DataContext.DeleteItemCommand}"
                                            CommandParameter="{Binding }" />
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>
                
                <Button Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" Style="{StaticResource Button}" Content="Add item"
                        Command="{Binding AddItemCommand}" />
            </Grid>

            <GridSplitter Grid.Column="1" Width="5" VerticalAlignment="Stretch" HorizontalAlignment="Center" />

            <s:ValidationStateInfoControl Grid.Column="2" DataContext="{Binding Validator}" />
        </Grid>
    </AdornerDecorator>
</UserControl>
